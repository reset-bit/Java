<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <!-- ========================================配置数据源dao========================================= -->
	<context:property-placeholder location="classpath:data.properties"/>
	<!--扫描service，自动注入-->
	<context:component-scan base-package="cn.edu.sdust.*" />
	
	<!-- 配置c3p0，开源数据库连接池，通过读取配置文件创建数据源对象。 -->
    <bean id="basicDataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" p:driverClassName="com.mysql.jdbc.Driver"
        p:url="jdbc:mysql://localhost:3306/usertable?serverTimezone=Asia/Shanghai"
        p:username="root" p:password="root1234" p:maxActive="10" p:maxIdle="10">       
    </bean>  
    
    <!-- ========================================针对myBatis的配置项============================== -->	
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     	<!-- 配置数据库连接池 -->
     	<property name="dataSource" ref="basicDataSource"></property> 
     	<!-- 加载mybatis全局配置文件 -->
     	<property name="mapperLocations" value="classpath:cn/edu/sdust/mapper/UserMapper.xml"/>
     </bean>
     
    <!-- 配置userMapper对象 -->
<!-- 	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
<!-- 	    <property name="basePackage" value="cn.edu.sdust.mapper"></property> -->
<!-- 		<property name="SqlSessionFactory" value="SqlSessionFactory"></property> -->
<!-- 	</bean> -->
	
	<!-- 配置mapper扫描器 -->
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!-- 		 扫描包路径，如果需要扫描多个包中间用半角逗号隔开 -->
	    <property name="basePackage" value="cn.edu.sdust.mapper"></property>
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 
		MapperFactoryBean是MyBatis-Spring团队提供的一个用于   根据Mapper接口生成Mapper对象的类，
		通过MapperFactoryBean可以配置接口文件以及注入SqlSessionfactory，从而完成一个Bean的实例化。
		要写配置文件，把对应的所有接口在配置文件中引用即可，无需写实现类，需要手动注入（动态代理开发），即set方法
	
		MapperScannerConfigurer是MyBatis-Spring团队提供的一种用于   以自动扫描形式来配置MyBatis中映射器的类，
		可以通过配置包路径来自动扫描包接口生成映射器，这使得开发人员可以在编写很少代码的情况下，完成对映射器的配置，从而提高开发效率。
		要写配置文件，只要给出接口所在的包即可，会自动把包中的接口引入，无需写实现类，使用注解扫描的方式@Autowired（动态代理）
	 -->

</beans>